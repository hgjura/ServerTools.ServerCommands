# name: .NET

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v2
#     - name: Setup .NET
#       uses: actions/setup-dotnet@v1
#       with:
#         dotnet-version: 5.0.x
#     - name: Restore dependencies
#       run: dotnet restore
#       working-directory: ./src/
#     - name: Build
#       run: dotnet build --no-restore
#       working-directory: ./src/
#     # - name: Test
#     #   run: dotnet test --no-build --verbosity normal
      
#     # - name: Publish  
#     #   uses: brandedoutcast/publish-nuget@v2.5.2  
#     #   with:   
#     #     PROJECT_FILE_PATH: ./src/ServerTools.ServerCommands.csproj  
#     #     NUGET_KEY: ${{secrets.NUGET_API_KEY}} 


on:
  push:
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Verify commit exists in origin/main
      run: |
        git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
        git branch --remote --contains | grep origin/main
    - name: Set VERSION variable from tag
      run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
    - name: Build
      run: dotnet build --configuration Release /p:Version=${VERSION}
    - name: Test
      run: dotnet test --configuration Release /p:Version=${VERSION} --no-build
    - name: Pack
      run: dotnet pack --configuration Release /p:Version=${VERSION} --no-build --output .
    # - name: Push
    #   run: dotnet nuget push NuGet.Workflow.${VERSION}.nupkg --source https://nuget.pkg.github.com/acraven/index.json --api-key ${GITHUB_TOKEN}
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}